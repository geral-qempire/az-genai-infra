name: terraform-deploy

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Pick what to run"
        required: true
        type: choice
        options:
          - plan
          - apply
          - destroy
        default: plan
      working_directory:
        description: "Terraform working directory (e.g. projects/dev/chatbot-framework-core)"
        required: true
        type: string
        default: projects/dev/chatbot-framework-core
      environment:
        description: "Target environment (must match a GitHub Environment)"
        required: true
        type: choice
        options:
          - Dev
          - Qua
          - Prd
        default: Dev
      terraform_version:
        description: "Terraform CLI version"
        required: true
        type: string
        default: "1.12.1"

permissions:
  contents: read

concurrency:
  group: tf-${{ inputs.working_directory }}-${{ inputs.environment }}
  cancel-in-progress: false

env:
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

jobs:
  plan:
    if: ${{ inputs.action == 'plan' }}
    name: Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}
          terraform_wrapper: false

      - name: Azure login (client secret)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Cache Terraform
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/.terraform.d/plugin-cache
            ./.terraform
          key: ${{ runner.os }}-tf-${{ hashFiles('.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tf-

      - name: Terraform fmt
        run: terraform fmt -check -no-color

      - name: Terraform init
        run: terraform init -input=false
        env:
          TF_PLUGIN_CACHE_DIR: ${{ runner.temp }}/.terraform.d/plugin-cache

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform plan
        run: terraform plan -no-color -input=false -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ inputs.working_directory }}/tfplan

  apply:
    if: ${{ inputs.action == 'apply' }}
    name: Apply
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}
          terraform_wrapper: false

      - name: Azure login (client secret)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Cache Terraform
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/.terraform.d/plugin-cache
            ./.terraform
          key: ${{ runner.os }}-tf-${{ hashFiles('.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tf-

      - name: Terraform init
        run: terraform init -input=false
        env:
          TF_PLUGIN_CACHE_DIR: ${{ runner.temp }}/.terraform.d/plugin-cache

      - name: Terraform plan (for apply)
        run: terraform plan -no-color -input=false -out=tfplan

      - name: Terraform apply
        run: terraform apply -input=false -auto-approve tfplan

  destroy:
    if: ${{ inputs.action == 'destroy' }}
    name: Destroy
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}
          terraform_wrapper: false

      - name: Azure login (client secret)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Cache Terraform
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/.terraform.d/plugin-cache
            ./.terraform
          key: ${{ runner.os }}-tf-${{ hashFiles('.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tf-

      - name: Terraform init
        run: terraform init -input=false
        env:
          TF_PLUGIN_CACHE_DIR: ${{ runner.temp }}/.terraform.d/plugin-cache

      - name: Terraform destroy
        run: terraform destroy -no-color -input=false -auto-approve
